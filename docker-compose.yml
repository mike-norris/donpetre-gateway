# docker-compose.yml - Secure version with secret management
services:
  postgresql:
    image: postgres:15-alpine
    container_name: openrangelabs-donpetre-db
    environment:
      POSTGRES_DB: knowledge_platform
      POSTGRES_USER: knowledge_user
      # Use Docker secrets or env file for passwords
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - openrangelabs-donpetre
    secrets:
      - db_password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U knowledge_user -d knowledge_platform"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: openrangelabs-donpetre-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - openrangelabs-donpetre
    # Optional: Add Redis password
    command: redis-server --requirepass ${REDIS_PASSWORD:-}
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  api-gateway:
    build: .
    container_name: openrangelabs-donpetre-gateway
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_HOST: postgresql
      DB_PORT: 5432
      DB_NAME: knowledge_platform
      DB_USERNAME: knowledge_user
      # Use Docker secrets for sensitive data
      DB_PASSWORD_FILE: /run/secrets/db_password
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}

      # JWT Configuration - Use secrets
      JWT_SECRET_KEY_FILE: /run/secrets/jwt_secret
      JWT_BACKUP_SECRET_FILE: /run/secrets/jwt_backup_secret
      JWT_ALGORITHM: HS512
      JWT_AUTO_GENERATE: false

      # Logging
      LOG_LEVEL: INFO

      # Security
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS:-https://yourdomain.com}

    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - openrangelabs-donpetre
    secrets:
      - db_password
      - jwt_secret
      - jwt_backup_secret
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

# Docker Secrets Configuration
secrets:
  db_password:
    file: ./secrets/db_password.txt
  jwt_secret:
    file: ./secrets/jwt_secret.txt
  jwt_backup_secret:
    file: ./secrets/jwt_backup_secret.txt

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  openrangelabs-donpetre:
    driver: bridge
    name: openrangelabs-donpetre-network